# set prefix to C-s
unbind-key C-b
set -g prefix 'C-s'
bind-key 'C-s' send-prefix

# tell tmux that terminal has 256 colors
set -g default-terminal "screen-256color"

# re-enable pbcopy and pbpaste inside tmux shells
set -g default-command "reattach-to-user-namespace -l bash"
# if fish is the default-command, this is required to stop double-execution of fish
set -g default-shell /bin/bash

# Use vim keybindings in copy mode
# setw -g mode-keys vi
# bind-key -T edit-mode-vi Up send-keys -X history-up
# bind-key -T edit-mode-vi Down send-keys -X history-down
# unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
# unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
# unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
# unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# keep 10k lines of scrollback
set -g history-limit 100000

# refresh tmux config with ⌃t R
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# window titles
set -g set-titles on
set-window-option -g automatic-rename on

# disable escape sequence delay
set -sg escape-time 0

# start window numbering at 1
set -g base-index 1
set -g pane-base-index 1

# resize whenever possible
setw -g aggressive-resize on

# new windows open in $CWD
bind c new-window -c '#{pane_current_path}'

# act like vim
setw -g mode-keys vi
bind-key | split-window -h
bind-key - split-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# allow scrollback in Terminal
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# enter scrollback mode and scroll up on shift-pageup
bind-key -n M-PPage copy-mode -u

set-window-option -g xterm-keys on # to make ctrl-arrow, etc. work

# status line inspired by wemux from https://gist.github.com/2305333
set -g status-left-length 32
set -g status-right-length 150
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left "#[fg=colour235,bg=colour252,bold] ⧉ #S #[fg=colour252,bg=colour235,nobold]"
set -g window-status-format "#[fg=white,bg=colour234] #I #W"
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour18,bg=colour39,noreverse,bold] #I  #W #[fg=colour39,bg=colour234,nobold]"
set -g status-right " #[fg=colour238,bg=colour234]#[fg=white,bg=colour238,bold,noreverse] #(hostname -s) "

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
